###
00000000   0000000  000000000  000  00     00   0000000   000000000  00000000  
000       000          000     000  000   000  000   000     000     000       
0000000   0000000      000     000  000000000  000000000     000     0000000   
000            000     000     000  000 0 000  000   000     000     000       
00000000  0000000      000     000  000   000  000   000     000     00000000  
###

{ stone } = require './util/util'
Score = require './score'

function Estimate extends Score

    estimate: (@verbose) ->
        
        score = @score()

        if @chains.length > 1
            for area in @areas
                if area.color == '?'
                    score += @estimateArea area
                    
        @info ?= {}
        @info.estimate = score + @info.komi ? 0

    estimateArea: (area) ->
        
        infl = Array(area.posl.length).fill 0
        for p in area.neighbors
            c = @coord p
            if @groupAt(p).state == 'dead' âžœ continue
                
            circle = [  # x  y weight shadows
                        [ 1  0  0.5 [ 8 12 16 17]] #  0
                        [ 0  1  0.5 [ 9 13 20 21]] #  1
                        [-1  0  0.5 [10 14 18 19]] #  2
                        [ 0 -1  0.5 [11 15 22 23]] #  3
                        [ 1  1  0.4 [16 20 24]]    #  4
                        [ 1 -1  0.4 [17 22 25]]    #  5
                        [-1  1  0.4 [18 21 26]]    #  6
                        [-1 -1  0.4 [19 23 27]]    #  7
                        [ 2  0  0.3 [12]]          #  8
                        [ 0  2  0.3 [13]]          #  9
                        [-2  0  0.3 [14]]          # 10
                        [ 0 -2  0.3 [15]]          # 11
                        [ 3  0  0.2 []]            # 12
                        [ 0  3  0.2 []]            # 13
                        [-3  0  0.2 []]            # 14
                        [ 0 -3  0.2 []]            # 15
                        [ 2  1  0.2 []]            # 16
                        [ 2 -1  0.2 []]            # 17
                        [-2  1  0.2 []]            # 18
                        [-2 -1  0.2 []]            # 19
                        [ 1  2  0.2 []]            # 20
                        [-1  2  0.2 []]            # 21
                        [ 1 -2  0.2 []]            # 22
                        [-1 -2  0.2 []]            # 23
                        [ 2  2  0.1 []]            # 24
                        [ 2 -2  0.1 []]            # 25
                        [-2  2  0.1 []]            # 26
                        [-2 -2  0.1 []]            # 27
                     ]

            sign = @stoneAt(c) == stone.black ? -1 : 1
            for d in circle
                if p = @pos [c[0]+d[0], c[1]+d[1]]
                    if p in area.posl
                        infl[area.posl.indexOf p] += sign * d[2]
                    else if p in area.neighbors
                        for i in d[3]
                            circle[i][3] = 0

        area.infl = infl.map (v) -> clamp -1 1 v
        area.infl.reduce (a,v) -> a+v
        
module.exports = Estimate
