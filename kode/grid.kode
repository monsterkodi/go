###
 0000000   00000000   000  0000000  
000        000   000  000  000   000
000  0000  0000000    000  000   000
000   000  000   000  000  000   000
 0000000   000   000  000  0000000  
###

{ splice, alpha } = require './util'

function Grid

    @: (a=0) -> 
        if a is str
            @fromString a
        else
            @size = a
            @clear()

    #  0000000  000      00000000   0000000   00000000   
    # 000       000      000       000   000  000   000  
    # 000       000      0000000   000000000  0000000    
    # 000       000      000       000   000  000   000  
    #  0000000  0000000  00000000  000   000  000   000  
    
    copy: (g) -> @grid = g.grid
    
    clear: (size) ->
        
        @size = size if size?
        @grid = ''
        for y in 0...@size
            @grid += rpad @size, ''
            @grid += '\n' if y < @size-1
        @
    
    # 000  0000000    000   000  
    # 000  000   000   000 000   
    # 000  000   000    00000    
    # 000  000   000   000 000   
    # 000  0000000    000   000  
    
    idx: (x,y) ->
        
        if not y?
            if 
                x is arr
                    y = x[1]
                    x = x[0] 
                x is str
                    y = @size - int x[1..]
                    x = alpha.indexOf x[0].toUpperCase()
        if not y?
            if x < @size*@size
                x
        else
            if 0 <= x < @size and 0 <= y < @size
                x+(@size+1)*y
                
    #  0000000   000000000  
    # 000   000     000     
    # 000000000     000     
    # 000   000     000     
    # 000   000     000     
    
    at: (x,y) ->
        
        i = @idx x,y
        if i?
            @grid[i]
        
    #  0000000  00000000  000000000  
    # 000       000          000     
    # 0000000   0000000      000     
    #      000  000          000     
    # 0000000   00000000     000     
    
    set: (x,y,c) ->

        if not c? then [c,y] = [y, undefined]
        @grid = splice @grid, @idx(x,y), 1, c
        
    #  0000000  000000000  00000000   000  000   000   0000000   
    # 000          000     000   000  000  0000  000  000        
    # 0000000      000     0000000    000  000 0 000  000  0000  
    #      000     000     000   000  000  000  0000  000   000  
    # 0000000      000     000   000  000  000   000   0000000   
    
    # toString: ->
#         
        # b = @size > 9 ? 2 : 1
        # p = lpad b, ''
        # s = p + alpha[0...@size] each (v) => ' ' + v 
        # rows = @grid.split '\n'
        # for row,ri in rows
            # s += '\n'
            # s += lpad(b,@size-ri) + ' ' + (row each (v) => v + ' ') + (@size-ri) # rpad(b, @size-ri)
        # s += '\n'
        # s += p + alpha[0...@size] each (v) => ' ' + v 
        # s

    # 000000000   0000000    0000000  000000000  00000000   000  000   000   0000000   
    #    000     000   000  000          000     000   000  000  0000  000  000        
    #    000     000   000  0000000      000     0000000    000  000 0 000  000  0000  
    #    000     000   000       000     000     000   000  000  000  0000  000   000  
    #    000      0000000   0000000      000     000   000  000  000   000   0000000   
    
    toString: (legend) ->
        
        s = '┌─' + lpad(@size*2, '' '─') + '┐'
        rows = @grid.split '\n'
        for row,ri in rows
            s += '\n│ '
            s += row each (v) => v + ' '
            s += '│' 
            s += ' ' + (@size-ri) if legend
        s += '\n'
        s += '└─' + lpad(@size*2, '' '─') + '┘'
        if legend
            s += '\n ' + alpha[0...@size] each (v) => ' ' + v 
        s
        
    # 00000000  00000000    0000000   00     00   0000000  000000000  00000000   000  000   000   0000000   
    # 000       000   000  000   000  000   000  000          000     000   000  000  0000  000  000        
    # 000000    0000000    000   000  000000000  0000000      000     0000000    000  000 0 000  000  0000  
    # 000       000   000  000   000  000 0 000       000     000     000   000  000  000  0000  000   000  
    # 000       000   000   0000000   000   000  0000000      000     000   000  000  000   000   0000000   
    
    fromString: (str) ->
        
        spl = str.split '\n'

        while trim(spl[-1]).length == 0
            spl.pop()
            
        if ltrim(spl[0])[0] == 'A'
            spl.shift()
            spl.pop()
            t = spl[-1][0] != ' ' ? 2 : 3
            spl = spl.map (s) -> s[t..]
            spl = spl.map (s) -> s[...spl.length*2]
            
        else if spl[0][0] == '┌'
            spl.shift()
            spl.pop()
            spl = spl.map (s) -> s[2..]
            spl = spl.map (s) -> s[...spl.length*2]
        
        @size = spl.length
        @clear()
            
        for y in 0...@size
            if y < spl.length
                for x in 0...@size
                    if x*2 < spl[y].length
                        c = spl[y][x*2] 
                        c = ' ' if c == '.'
                        @set x, y, c
        
module.exports = Grid
