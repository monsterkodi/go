###
000000000  00000000   00000000  00000000  00000
   000     000   000  000       000          000
   000     0000000    0000000   0000000     000
   000     000   000  000       000        000
   000     000   000  00000000  00000000  000000
###

Tree = require '../tree'

global.test = true

▸ tree2

    pod =
        cursor: [1 1 0]
        moves:  [
                    pos:  'A1'
                ,
                    pos:  'A2'
                    alt:    [
                                moves:  [
                                            pos:  'B1'
                                        ,
                                            pos:  'B2'
                                        ,
                                            pos:  'B3'
                                        ]
                            ,
                                moves:  [
                                            pos:  'C1'
                                        ]
                            ]
                ,
                    pos:  'A3'
                ,
                    pos:  'A4'
                ,
                    pos:  '?'
                ]

    t = new Tree().fromPOD pod

    t.toString() ▸
        """
        A1
        A2──B1◂─C1
        A3  B2
        A4  B3
        ?
        """

    ▸ delete

        t.deleteCursorMove()

        t.toString() ▸
            """
            A1
            A2◂─C1
            A3
            A4
            ?
            """

        t.deleteCursorMove()

        t.toString() ▸
            """
            A1
            A2◂─C1
            A3
            A4
            ?
            """

        t = new Tree().fromPOD pod

        t.toString() ▸
            """
            A1
            A2──B1◂─C1
            A3  B2
            A4  B3
            ?
            """

        t.addMove 'D1'

        t.toString() ▸
            """
            A1
            A2──B1──────C1
            A3  B2──D1◂
            A4  B3
            ?
            """

        t.addMove 'D2'

        t.navigate 'up'
        t.navigate 'up'

        t.toString() ▸
            """
            A1
            A2──B1──────C1
            A3  B2──D1◂
            A4  B3  D2
            ?
            """

        t.navigate 'back'

        t.toString() ▸
            """
            A1
            A2──B1◂─────C1
            A3  B2──D1
            A4  B3  D2
            ?
            """

        t.addMove 'E1'

        t.toString() ▸
            """
            A1
            A2──B1──────────C1
            A3  B2──D1──E1◂
            A4  B3  D2
            ?
            """

        t.navigate 'left'

        t.toString() ▸
            """
            A1
            A2──B1──────────C1
            A3  B2──D1◂─E1
            A4  B3  D2
            ?
            """

        t.navigate 'left'

        t.toString() ▸
            """
            A1
            A2──B1──────────C1
            A3  B2◂─D1──E1
            A4  B3  D2
            ?
            """

        t.deleteCursorMove()
        t.toString() ▸
            """
            A1
            A2──B1──────C1
            A3  D1◂─E1
            A4  D2
            ?
            """

        t.select 4
        t.toString() ▸
            """
            A1
            A2──B1──────C1
            A3  D1──E1
            A4  D2
            ?◂
            """

        t.addMove 'F1'

        t.toString() ▸
            """
            A1
            A2──────B1──────C1
            A3      D1──E1
            A4      D2
            ?───F1◂
            """

        t.navigate 'left'
        t.addMove 'F2'

        t.toString() ▸
            """
            A1
            A2──────────B1──────C1
            A3          D1──E1
            A4          D2
            ?───F1──F2◂
            """

        t.navigate 'leftmost'
        t.addMove 'F2'

        t.toString() ▸
            """
            A1
            A2──────────B1──────C1
            A3          D1──E1
            A4          D2
            ?───F1──F2◂
            """
            
