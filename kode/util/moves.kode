###
00     00   0000000   000   000  00000000   0000000
000   000  000   000  000   000  000       000     
000000000  000   000   000 000   0000000   0000000 
000 0 000  000   000     000     000            000
000   000   0000000       0      00000000  0000000 
###

{ stoneColor } = require './util'

function Move

    @: (@pos, @color, @captures) ->
        # log 'move with captures' @pos, @color, @captures if valid @captures

function Moves

    @: -> @m = []

    num:        -> @m.length
    pop:        -> @m.pop()
    clear:      -> @m = []; delete @ended
    end:        -> @ended ? false
    last:       -> @m[@m.length-1]
    start:      -> @m.length == 0
    history:    -> @m.map (m) -> m.pos
    resigned:   -> @m[-1]?.pos == 'resign'
    lastIsPass: -> @m[-1]?.pos == 'pass'
    singlePass: -> @m[-1]?.pos == 'pass' and @m[-2]?.pos != 'pass'
    doublePass: -> @m[-1]?.pos == 'pass' == @m[-2]?.pos
    lastColor:  -> @m.length ? ['white''black'][@m.length%2] : 'start'
    nextColor:  -> ['black''white'][@m.length%2]
    color: (c)  -> c ? stoneColor[c] : @nextColor()
    add: (pos,color,captures)  ->
        @m.push new Move pos, @color(color), captures
        switch pos
            'pass'   ➜ @ended = @doublePass()
            'resign' ➜ @ended = true
                     ➜ @ended = false

module.exports = Moves
