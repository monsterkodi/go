###
000   000   0000000   00000000   00000000  00000000
000   000  000   000  000   000  000       000     
 000 000   000000000  0000000    0000000   0000000 
   000     000   000  000   000  000       000     
    0      000   000  000   000  00000000  00000000
###

{ elem, post } = require 'kxk'
{ max } = Math

function varee

    @: (@parent, @tree) ->
        
        @div = elem 'div' class:'varee' parent:@parent        
        
        @canvas = elem 'canvas' class:'treelines' parent:@div
        @ctx = @canvas.getContext '2d'
        @ctx.strokeStyle = 'black'
        @ctx.lineWidth = 14
        @ctx.lineCap = 'round'
                
        @hlt = elem 'div' class:'highlts' parent:@div
        @stn = elem 'div' class:'stones'  parent:@div
        @crs = elem 'div' class:'cursor'  parent:@hlt
        
        post.on 'resize' @onResize
        post.on 'tree'   @onTree
        @onResize()
        
    onTree: =>
        
        @stn.innerHTML = ''
        for mv in @tree.moves
            elem class:"varii #{mv.color}" text: mv.pos, parent:@stn

        @crs.classList.remove 'black'
        @crs.classList.remove 'white'
        
        ctr = @tree.cursorTree() ? @tree
        @crs.classList.add ctr.moves[ctr.cursor.mvi].color
            
        mvi = @tree.cursor.mvi
        ali = @tree.cursor.ali
        @crs.style.left = "#{ali*50+25}px"
        @crs.style.top  = "#{mvi*50+25}px"

        @drawLines()
        
    drawLines: ->
        
        @canvas.width  = 100
        @canvas.height = @tree.moves.length*50
        
        if @tree.moves.length > 1
            
            @ctx.strokeStyle = '#000d'
            @ctx.lineWidth = 3
            @ctx.lineCap = 'round'
            
            @ctx.beginPath()
            @ctx.moveTo 25 25
            @ctx.lineTo 25 25+50*(@tree.moves.length-1)
            @ctx.stroke()   
        
    onResize: =>
        
        br = @parent.getBoundingClientRect()
        w  = max 0 (br.width - br.height)/2
        @div.style.width = "#{w}px"
        
    remove: ->
        
        if @div
            post.off 'resize' @onResize
            post.off 'tree'   @onTree
            @parent.removeChild @div
            delete @div

module.exports = varee
