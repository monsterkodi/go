###
000   000  000  000   000  0000000     0000000   000   000
000 0 000  000  0000  000  000   000  000   000  000 0 000
000000000  000  000 0 000  000   000  000   000  000000000
000   000  000  000  0000  000   000  000   000  000   000
00     00  000  000   000  0000000     0000000   00     00
###

kxk = require 'kxk'
{ args, kerror, keyinfo, klog, post, stash, win, elem, $ } = kxk

Board = require './board'
Game  = require './game'
GNU   = require './gnu'

function MainWin extends win
    
    @: ->
        
        super
            dir:    __dirname
            pkg:    require '../package.json'
            menu:   '../kode/menu.noon'
            icon:   '../img/mini.png'
            prefsSeperator: '▸'
            onLoad: @onLoad
            
        post.on 'alert' (msg) -> window.alert(msg); kerror msg
        post.on 'saveStash'   @saveStash
        
        window.stash = new stash "win/#{@id}" separator:'▸'
        post.setMaxListeners 20
        
        window.onload = @onLoad
                                    
    # 000       0000000    0000000   0000000    
    # 000      000   000  000   000  000   000  
    # 000      000   000  000000000  000   000  
    # 000      000   000  000   000  000   000  
    # 0000000   0000000   000   000  0000000    
    
    onLoad: =>
        
        @restore()
        
        @main =$ '#main'
        
        if 0
            r1 = elem 'div' class:'row' parent:@main
            r2 = elem 'div' class:'row' parent:@main
            r1.style = 'height:50%'
            r2.style = 'height:50%'
            
            @board1 = new Board r1, 9
            @board2 = new Board r1, 13
            @board3 = new Board r1, 19
            @board4 = new Board r2, 19
            @board5 = new Board r2, 13
            @board6 = new Board r2, 9
        else
            @newGame 9
        
    newGame: (@boardsize=9) ->
        # log @boardsize
        @main.innerHTML = ''
        r1 = elem 'div' class:'row' parent:@main
        r1.style = 'height:100%'
        @board = new Board r1, @boardsize
        @game = new Game @board
        @gnu = new GNU @game
        @board.gnu = @gnu
        @gnu.newGame @boardsize, 'black'
        
    onMove: => window.stash.set 'bounds' @getBounds()
    
    onResize: =>
        
        window.stash.set 'bounds' @getBounds()
        post.emit 'resize'
        
    # 00000000   00000000   0000000  000000000   0000000   00000000   00000000  
    # 000   000  000       000          000     000   000  000   000  000       
    # 0000000    0000000   0000000      000     000   000  0000000    0000000   
    # 000   000  000            000     000     000   000  000   000  000       
    # 000   000  00000000  0000000      000      0000000   000   000  00000000  
    
    restore: =>
    
        if bounds = window.stash.get 'bounds'
            @setBounds bounds
    
        post.emit 'restore'
   
    saveStash: =>
    
        window.stash.set 'bounds' @getBounds()
        post.emit 'stash'
        window.stash.save()
        post.toMain 'stashSaved'
                
    # 00     00  00000000  000   000  000   000  
    # 000   000  000       0000  000  000   000  
    # 000000000  0000000   000 0 000  000   000  
    # 000 0 000  000       000  0000  000   000  
    # 000   000  00000000  000   000   0000000   
    
    onMenuAction: (action, args) =>
               
        switch action.toLowerCase()
            'save'         ➜ return @saveStash()
            'revert'       ➜ return @restore()
            'new game'     ➜ return @newGame @boardsize
            'boardsize 9'
            'boardsize 13'
            'boardsize 19' ➜ return @newGame int action.split(' ')[1]
                        
        klog "menuAction '#{action}'" # args     
        super action, args
           
new MainWin            
