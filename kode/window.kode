###
000   000  000  000   000  0000000     0000000   000   000
000 0 000  000  0000  000  000   000  000   000  000 0 000
000000000  000  000 0 000  000   000  000   000  000000000
000   000  000  000  0000  000   000  000   000  000   000
00     00  000  000   000  0000000     0000000   00     00
###

kxk = require 'kxk'
{ args, kerror, keyinfo, klog, post, stash, win, elem, $ } = kxk
{ stone } = require './util/util'
SGF       = require './util/sgf'
Board     = require './board'
Referee   = require './referee'
Online    = require './online'

function MainWin extends win
    
    @: ->
        
        super
            dir:    __dirname
            pkg:    require '../package.json'
            menu:   '../kode/menu.noon'
            icon:   '../img/mini.png'
            prefsSeperator: '▸'
            onLoad: @onLoad
            
        post.on 'alert' (msg) -> window.alert(msg); kerror msg
        post.on 'saveStash'   @saveStash
        
        window.stash = new stash "win/#{@id}" separator:'▸'
        post.setMaxListeners 20
        
        window.onresize = @onResize
        window.onload   = @onLoad
        
        main =$ "#main"
        row = elem 'div' class:'row' parent:main, style:'height:100%'
        
        @referee = new Referee row
        @online  = new Online  row, @referee
                
    # 000       0000000    0000000   0000000    
    # 000      000   000  000   000  000   000  
    # 000      000   000  000000000  000   000  
    # 000      000   000  000   000  000   000  
    # 0000000   0000000   000   000  0000000    
    
    onLoad: =>
        
        @restore()
        
        @referee.newGame
            black:    window.stash.get 'black'     'human'
            white:    window.stash.get 'white'     'gnu'
            size:     window.stash.get 'size'      9
            handicap: window.stash.get 'handicap'  0
            moves:    window.stash.get 'moves'     []
            # tree:     window.stash.get 'tree'
            
        @referee.board.preloadStones()
            
    onResize: =>
        
        window.stash.set 'bounds' @getBounds()
        post.emit 'resize'
        
    # 00000000   00000000   0000000  000000000   0000000   00000000   00000000  
    # 000   000  000       000          000     000   000  000   000  000       
    # 0000000    0000000   0000000      000     000   000  0000000    0000000   
    # 000   000  000            000     000     000   000  000   000  000       
    # 000   000  00000000  0000000      000      0000000   000   000  00000000  
    
    restore: =>
    
        if bounds = window.stash.get 'bounds' then @setBounds bounds
        post.emit 'restore'
   
    #  0000000   0000000   000   000  00000000   0000000  000000000   0000000    0000000  000   000  
    # 000       000   000  000   000  000       000          000     000   000  000       000   000  
    # 0000000   000000000   000 000   0000000   0000000      000     000000000  0000000   000000000  
    #      000  000   000     000     000            000     000     000   000       000  000   000  
    # 0000000   000   000      0      00000000  0000000      000     000   000  0000000   000   000  
    
    saveStash: =>
    
        window.stash.set 'bounds' @getBounds()
        post.emit 'stash'
        window.stash.save()
        post.toMain 'stashSaved'
        
    # 000000000  000  000000000  000      00000000  
    #    000     000     000     000      000       
    #    000     000     000     000      0000000   
    #    000     000     000     000      000       
    #    000     000     000     0000000  00000000  
    
    updateTitle: ->
        
        game = @referee.game
        return if not game
        
        t =$ '.titlebar-title'
        t.innerHTML = ''
        td = elem 'div' class:'gameInfo'            parent:t
        tl = elem 'div' class:'gameInfoLeft black'  parent:td
        tm = elem 'div' class:'gameInfoCenter'      parent:td
        tr = elem 'div' class:'gameInfoRight white' parent:td
                
        mov = black:'' white:''
        if game.moves.singlePass()
            mov[game.lastColor()] = 'pass'
        if game.moves.resigned()
            mov[game.lastColor()] = 'resign'
 
        if game.lastColor() == 'white'
            sb = stone.white
            sw = stone.black
        else
            sb = stone.black
            sw = stone.white

        cps = black: game.moves.p[0] != 0 ? game.moves.p[0] + ' ' + sb : ''
              white: game.moves.p[1] != 0 ? game.moves.p[1] + ' ' + sw : ''
            
        elem 'span' class:'move'    parent:tl, text: mov.black
        elem 'span' class:'player'  parent:tl, text: game.players.black
        elem 'span' class:'capture' parent:tl, text: sb + ' ' + cps.black 
        if game.info.score      ➜ elem 'span' class:"score #{game.info.score[0]}"  parent:tm, text: game.info.score
        if valid @referee.redos ➜ elem 'span' class:"redos"  parent:tm, text: "#{@referee.game.moves.num()} #{stone.white} #{@referee.game.moves.num()+@referee.redos.length}"
        elem 'span' class:'capture' parent:tr, text: sw + ' ' + cps.white
        elem 'span' class:'player'  parent:tr, text: game.players.white 
        elem 'span' class:'move'    parent:tr, text: mov.white
                
    # 00     00  00000000  000   000  000   000  
    # 000   000  000       0000  000  000   000  
    # 000000000  0000000   000 0 000  000   000  
    # 000 0 000  000       000  0000  000   000  
    # 000   000  00000000  000   000   0000000   
    
    onMenuAction: (action, args) =>
               
        switch action.toLowerCase()
            'clear'                         ➜ @referee.tree.clearVariations()
            'open'                          ➜ SGF.openDialog()
            'save as ...'                   ➜ SGF.saveAsDialog()
            'save'                          ➜ @referee.save(); @saveStash()
            'up''down''left''right'
            'rightdown''leftup'
            'back''forward'                 ➜ @referee.navigate action
            'delete'                        ➜ @referee.delete()
            'undo'                          ➜ @referee.undo()
            'redo'                          ➜ @referee.redo()
            'start'                         ➜ @referee.jumpToStart()
            'end'                           ➜ @referee.jumpToEnd()
            'pass'                          ➜ @referee.playerMove 'pass'   'human'
            'resign'                        ➜ @referee.playerMove 'resign' 'human'
            'genmove'                       ➜ @referee.genMove()
            'calcscore'                     ➜ log @referee.game.calcScore(); @referee.board.annotate()
            'games'                         ➜ @online.toggleGames() 
            'tree'                          ➜ @referee.toggleTree() 
            'numbers'                       ➜ @referee.board.toggleNumbers()
            'coordinates'                   ➜ @referee.board.toggleCoordinates()
            'liberties'                     ➜ @referee.board.toggleLiberties()
            'territory'                     ➜ @referee.board.toggleTerritory()
            'variations'                    ➜ @referee.board.toggleVariations()
            'new game'                      ➜ @referee.newGame()
            'gnu human'                     ➜ @referee.newGame black:'gnu'    white:'human'
            'human gnu'                     ➜ @referee.newGame black:'human'  white:'gnu'
            'human human'                   ➜ @referee.newGame black:'human'  white:'human'               
            'gnu gnu'                       ➜ @referee.newGame black:'gnu'    white:'gnu'  
            'leelaz human'                  ➜ @referee.newGame black:'leelaz' white:'human' 
            'human leelaz'                  ➜ @referee.newGame black:'human'  white:'leelaz' 
            'leelaz leelaz'                 ➜ @referee.newGame black:'leelaz' white:'leelaz'
            'gnu leelaz'                    ➜ @referee.newGame black:'gnu'    white:'leelaz'   
            'gnu hara'                      ➜ @referee.newGame black:'gnu'    white:'hara'   
            'hara hara'                     ➜ @referee.newGame black:'hara'   white:'hara'   
            'katago katago'                 ➜ @referee.newGame black:'katago' white:'katago'   
            'katago leelaz'                 ➜ @referee.newGame black:'katago' white:'leelaz'   
            'gnu katago'                    ➜ @referee.newGame black:'gnu'    white:'katago'   
            '7x7''9x9''13x13''19x19'        ➜ @referee.newGame size:int action
            '0''1''2''3''4'
            '5''6''7''8''9'                 ➜ @referee.newGame handicap: int action
                                            ➜
                                              # log "menuAction '#{action}'" # args     
                                              super action, args
           
new MainWin            
